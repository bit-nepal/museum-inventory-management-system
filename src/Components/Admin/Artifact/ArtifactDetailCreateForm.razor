@namespace mims.Components.Admin.Artifact
@using mims.Models
@inject mims.Services.Interfaces.IArtifactService artifactService
@inject NavigationManager Navigation
@inject ToastService ToastService

<Alert Color="AlertColor.Light">
    <div class="d-flex justify-content-between align-items-center">
        <h4 class="alert-heading">
            Add Artifacts !! (todo moa & photo )
        </h4>
    </div>
</Alert>

<Breadcrumb style="--bs-breadcrumb-divider: url(&#34;data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8'%3E%3Cpath d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='currentColor'/%3E%3C/svg%3E&#34;);" Items="navItems" />

<ArtifactDetailForm OnValidSubmitHandler="HandleValidSubmit" ButtonText="Add Artifact" bindingArtifactObject="artifact" />

@code {
    public Artifact artifact = new Artifact();
    public Image primaryPhoto = new Image();
    private List<BreadcrumbItem>? navItems;
    protected override void OnInitialized()
    {
        navItems = new List<BreadcrumbItem>
        {
            new BreadcrumbItem{ Text = "Dashboard", Href ="/Admin" },
            new BreadcrumbItem{ Text = "Artifacts", Href ="/Admin/Artifacts" },
            new BreadcrumbItem{ Text = "Add Artifact", IsCurrentPage = true }
        };

        artifact.PrimaryPhoto = primaryPhoto;
    } 
    public async Task HandleValidSubmit()
    {
        int affectedRows = await artifactService.AddArtifact(artifact);
        Console.WriteLine("Create Form Submitted: " + affectedRows);
        if(affectedRows > 0)
        {
          Navigation.NavigateTo("/Admin/Artifacts"  , true);
          ToastService.Notify( new() {
            IconName = IconName.Apple,
            Title = "Success",
            Message = "Successfully Created Artifact !!",
            Type = ToastType.Success
          });
        }else
        {
          ToastService.Notify( new() {
            IconName = IconName.Apple,
            Title = "Failure",
            Message = "Artifact Creation Failed !!",
            Type = ToastType.Danger
          });
        }
    }
}
