@namespace mims.Components.Admin.Account
@rendermode InteractiveServer

@using System.ComponentModel.DataAnnotations
@using Services.Interfaces
@using mims.Models
@using mims.Services
@using mims.DTOs
@using Microsoft.AspNetCore.Identity

@inject IConfiguration config
@inject MediaService MediaService
@inject IAccountService AccountService
@inject NavigationManager Navigation
@inject ToastService ToastService


<style>
    .profile-container {
        max-width: 800px;
        margin: auto;
        background-color: white;
        padding: 20px;
        border-radius: 15px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }
</style>

<Offcanvas @ref="offcanvas"  Size="OffcanvasSize.Small" UseStaticBackdrop="true" style="width: 0px; height:0px;" />
<Card Style="width:30rem;" Class="profile-container mx-auto">
    <CardBody>
        <div style="text-center">
            <h2>Change Username</h2>
        </div>
        <EditForm Model="@model" class="form-inline" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            @* <div class="form-group mt-4">
                <label for="newPassword">Enter new username</label>
                <input type="text" class="form-control form-control-lg" id="newusername" placeholder="Enter new username">
            </div>
            <div class="form-group mt-4">
                <label for="password">Enter password</label>
                <input type="password" class="form-control form-control-lg" id="oldpw" placeholder="Enter password">

            </div> *@

@*             <div class="form-group mt-4">
                <label for="entryno" class="form-label mx-3"> New Username </label>&nbsp; &nbsp;
                <InputText id="entryno" class="form-check form-control-sm" @bind-Value="model.NewUserName" />
            </div> *@
            <div class="form-group mt-4">
                <label for="username" class="h5">Username</label>
                <InputText id="username" class="form-control form-control-lg" @bind-Value="model.NewUserName" placeholder="Enter username" />
            </div>
            <div class="form-group mt-4" >
                <label for="Password" class="h5">Password</label>
                <InputText id="Password" class="form-control form-control-lg" @bind-Value="model.Password" placeholder="Enter Password" />
            </div>
            
            <div class="d-grid gap-2 col-6 mx-auto mt-4">
                <Button Type="ButtonType.Submit" Color="ButtonColor.Primary"> Change Username </Button>
            </div>

        </EditForm>



    </CardBody>

</Card>
@code {
    private Offcanvas offcanvas = default!;
    ApplicationUserChangeUsernameDTO model = new ();

    private async Task HandleValidSubmit()
    {
        offcanvas.ShowAsync();
        Console.WriteLine("handling valid submit");
        Console.WriteLine("Username: " + model.NewUserName);
        Console.WriteLine("Password:" + model.Password);

        var result = await  AccountService.ChangeUsername(model);
        if(result.Succeeded){
          Console.WriteLine("Username Change Successful");
          Navigation.NavigateTo($"Admin/Account/Logout",forceLoad:true);
        }
        else
        {
          Console.WriteLine("Username Change UnSuccessful");
          string message = "";
          foreach(IdentityError error in result.Errors)
          {
            message += $"{error.Description}";
            Console.WriteLine(error.Description);
          }

          ToastService.Notify( new() {
            IconName = IconName.Apple,
            Title = "Cannot Change Username !!",
            Message = message,
            Type = ToastType.Danger
          });
        }
        offcanvas.HideAsync();
    }
}
