@namespace mims.Components.Admin.Account
@rendermode InteractiveServer

@using System.ComponentModel.DataAnnotations
@using Services.Interfaces
@using mims.Models
@using mims.Services
@using mims.DTOs
@using Microsoft.AspNetCore.Identity

@inject NavigationManager Navigation
@inject IConfiguration config
@inject MediaService MediaService
@inject ToastService ToastService
@inject IAccountService AccountService

<style>
    .profile-container {
        max-width: 800px;
        margin: auto;
        background-color: white;
        padding: 20px;
        border-radius: 15px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }
</style>

<Offcanvas @ref="offcanvas"  Size="OffcanvasSize.Small" UseStaticBackdrop="true" style="width: 0px; height:0px;" />
<Card Style="width:30rem;" Class="profile-container">
    <CardBody> 
        <div style="text-center">
            <h2>Change Password</h2>
        </div>
@*         <form>
            <div class="form-group mt-4">
                <label for="oldPassword">Enter old password</label>
                <input type="password" class="form-control form-control-lg" id="oldpw" placeholder="Enter old password">

            </div>
            <div class="form-group mt-4">
                <label for="newPassword">Enter new password</label>
                <input type="password" class="form-control form-control-lg" id="newpw" placeholder="Enter new password">
            </div>
            <div class="form-group mt-4">
                <label for="confirmNewPassword">Confirm new password</label>
                <input type="password" class="form-control form-control-lg" id="newpw" placeholder="Confirm new password">
            </div>
            <div class="d-grid gap-2 col-6 mx-auto mt-4">
                <Button Color="ButtonColor.Primary"> Change Password </Button>
            </div>

        </form> *@

        <EditForm Model="@model" class="form-inline" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="d-flex mb-1">
                <label for="oldPassword" class="form-label mx-3"> Enter Old Password </label>&nbsp; &nbsp;
                <InputText id="entryno" class="form-check p-0 flex-grow-1" @bind-Value="model.OldPassword" />
            </div>

            <div class="d-flex mb-1">
                <label for="newPassword" class="form-label mx-3">Enter New Password </label>&nbsp; &nbsp;
                <InputText id="entryno" class="form-check p-0 flex-grow-1" @bind-Value="model.NewPassword" />
            </div>

            <div class="d-flex mb-1">
                <label for="confirmNewPassword" class="form-label mx-3">Confirm New Password </label>&nbsp; &nbsp;
                <InputText id="entryno" class="form-check p-0 flex-grow-1" @bind-Value="model.ConfirmNewPassword" />
            </div>

            <div class="d-grid gap-2 col-6 mx-auto mt-4">
                <Button Type="ButtonType.Submit" Color="ButtonColor.Primary"> Change Password </Button>
            </div>

        </EditForm>
    </CardBody>

</Card>

@code {
    private Offcanvas offcanvas = default!;
    ApplicationUserChangePasswordDTO model = new();
    
    private async Task HandleValidSubmit()
    {
        offcanvas.ShowAsync();
        Console.WriteLine("handling valid submit");
        Console.WriteLine("Old Password: " + model.OldPassword);
        Console.WriteLine("New Password:" + model.NewPassword);
        Console.WriteLine("Confirm Password:" + model.ConfirmNewPassword);

        var result = await  AccountService.ChangePassword(model);
        if(result.Succeeded){
          Console.WriteLine("Password Change Successful");
          Navigation.NavigateTo($"Admin/Account/Logout",forceLoad:true);
        }
        else
        {
          Console.WriteLine("Password Change UnSuccessful");
          string message = "";
          foreach(IdentityError error in result.Errors)
          {
            message += $"{error.Description}";
            Console.WriteLine(error.Description);
          }

          ToastService.Notify( new() {
            IconName = IconName.Apple,
            Title = "Cannot Change Password !!",
            Message = message,
            Type = ToastType.Danger
          });
        }
        offcanvas.HideAsync();
        }
    }
}
