@namespace mims.Components.Admin.Dashboard
@rendermode InteractiveServer

@using mims.Models
@using mims.Services.Interfaces
@inject IArtifactService ArtifactService

@* <Card Color="CardColor.Info" Class="mb-4" Style="width:30rem;">
    <CardBody>
        <CardTitle>Recently Added Artifacts: </CardTitle>
    </CardBody>
    <ul class="list-group list-group-flush">
        @if (isLoading)
        {
            <li class="list-group-item">Loading...</li>
        }
        else if (Artifacts == null || !Artifacts.Any())
        {
            <li class="list-group-item">No artifacts found !!</li>
        }
        else
        {
            foreach (var artifact in Artifacts)
            {
                <li class="list-group-item">@artifact.Name</li>
            }
        }
    </ul>
</Card> *@

<Card Class="border-0 rounded-4 bg-white" Style="width:40rem;">
    <CardBody>
        <CardTitle>
            <div class="d-flex justify-content-between">
            Recently Added Artifacts
            <Icon Name="IconName.PlusLg" Size=" IconSize.x5"></Icon>
            </div>

        </CardTitle>
        1 <br> 2 <br />  3 <br />
    </CardBody>
   
</Card>


@code {
  IEnumerable<Artifact> Artifacts;
  private bool isLoading = true;

  protected override async Task OnInitializedAsync()
  {
    int noOfRecords = 4;
    Artifacts = await ArtifactService.GetRecentlyAddedArtifacts(noOfRecords);
    isLoading = false;
  }
}
