// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mims.Data;

#nullable disable

namespace mims.Migrations
{
    [DbContext(typeof(ArtifactContext))]
    partial class ArtifactContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("mims.Models.Artifact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("artifact_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateOnly?>("DateOfAquisition")
                        .HasColumnType("date")
                        .HasColumnName("date_of_aquisition");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<int?>("EstimatedValue")
                        .HasColumnType("int")
                        .HasColumnName("estimated_value");

                    b.Property<bool>("HasInscription")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("has_inscription");

                    b.Property<string>("Inscription")
                        .HasColumnType("longtext")
                        .HasColumnName("inscription");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Location")
                        .HasColumnType("longtext")
                        .HasColumnName("location");

                    b.Property<string>("Measurement")
                        .HasColumnType("longtext")
                        .HasColumnName("measurement");

                    b.Property<int>("ModeOfAcquisition")
                        .HasColumnType("int")
                        .HasColumnName("mode_of_acquisition");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("NameOfArtist")
                        .HasColumnType("longtext")
                        .HasColumnName("name_of_artist");

                    b.Property<string>("NameOfDonor")
                        .HasColumnType("longtext")
                        .HasColumnName("name_of_donor");

                    b.Property<string>("Number")
                        .HasColumnType("longtext")
                        .HasColumnName("number_of_objects");

                    b.Property<string>("PhysicalCondition")
                        .HasColumnType("longtext")
                        .HasColumnName("physical_condition");

                    b.Property<string>("PlaceOfOrigin")
                        .HasColumnType("longtext")
                        .HasColumnName("place_of_origin");

                    b.Property<string>("PlaceOfReceipt")
                        .HasColumnType("longtext")
                        .HasColumnName("place_of_receipt");

                    b.Property<int?>("PrimaryPhotoId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext")
                        .HasColumnName("remarks");

                    b.Property<string>("TimePeriod")
                        .HasColumnType("longtext")
                        .HasColumnName("time_period");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<string>("Weight")
                        .HasColumnType("longtext")
                        .HasColumnName("weight");

                    b.HasKey("Id");

                    b.HasIndex("PrimaryPhotoId");

                    b.ToTable("Artifacts");
                });

            modelBuilder.Entity("mims.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("image_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ArtifactId")
                        .HasColumnType("int");

                    b.Property<string>("ImageNo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("image_no");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("image_url");

                    b.HasKey("Id");

                    b.HasIndex("ArtifactId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("mims.Models.Artifact", b =>
                {
                    b.HasOne("mims.Models.Image", "PrimaryPhoto")
                        .WithMany()
                        .HasForeignKey("PrimaryPhotoId");

                    b.Navigation("PrimaryPhoto");
                });

            modelBuilder.Entity("mims.Models.Image", b =>
                {
                    b.HasOne("mims.Models.Artifact", null)
                        .WithMany("Photos")
                        .HasForeignKey("ArtifactId");
                });

            modelBuilder.Entity("mims.Models.Artifact", b =>
                {
                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
